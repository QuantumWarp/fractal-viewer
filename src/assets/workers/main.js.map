{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./worker/app-workers/app.workers.ts","webpack:///./worker/app-workers/fractal-processers/fractal-processor.ts","webpack:///./worker/app-workers/fractals/mandelbrot-set.ts","webpack:///./worker/app-workers/fractals/shared/fractal-factory.ts","webpack:///./worker/app-workers/fractals/shared/fractal-type.enum.ts","webpack:///./worker/app-workers/messages/process-fractal-done.ts","webpack:///./worker/app-workers/messages/process-fractal-results.ts","webpack:///./worker/app-workers/messages/worker-message.enum.ts","webpack:///./worker/app-workers/shared/computed-point.ts","webpack:///./worker/app-workers/shared/coordinate.ts","webpack:///./worker/main.worker.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { FractalProcessor } from './fractal-processers/fractal-processor';\r\nimport { ProcessFractalDone } from './messages/process-fractal-done';\r\nimport { ProcessFractalInfo } from './messages/process-fractal-info';\r\nimport { ProcessFractalResults } from './messages/process-fractal-results';\r\nimport { WorkerMessageType } from './messages/worker-message.enum';\r\n\r\nexport class AppWorkers {\r\n  constructor(public workerCtx: any) { }\r\n\r\n  workerBroker($event: any): void {\r\n    const message = $event.data;\r\n\r\n    switch (message.type) {\r\n      case WorkerMessageType.ProcessFractalInfo:\r\n        this.startProcessor(message);\r\n        break;\r\n      default:\r\n        console.error('Message not recognized');\r\n    }\r\n  }\r\n\r\n  startProcessor(params: ProcessFractalInfo): void {\r\n    const processor = new FractalProcessor(params);\r\n    processor.process((coords) =>\r\n      this.workerCtx.postMessage(new ProcessFractalResults(coords)));\r\n    this.workerCtx.postMessage(new ProcessFractalDone());\r\n  }\r\n}\r\n","import { FractalFactory } from '../fractals/shared/fractal-factory';\r\nimport { Fractal } from '../fractals/shared/fractal.interface';\r\nimport { ProcessFractalInfo } from '../messages/process-fractal-info';\r\nimport { ComputedPoint } from '../shared/computed-point';\r\nimport { Coordinate } from '../shared/coordinate';\r\n\r\nexport class FractalProcessor {\r\n  public computedCoords: ComputedPoint[] = [];\r\n\r\n  private fractal: Fractal<any>;\r\n  private topLeftCoord: Coordinate;\r\n\r\n  constructor(\r\n    public params: ProcessFractalInfo) {\r\n    this.fractal = FractalFactory.create(params.fractalParams);\r\n    this.topLeftCoord = new Coordinate(\r\n      params.center.x - (params.increment * params.width / 2),\r\n      params.center.y - (params.increment * params.height / 2)\r\n    );\r\n  }\r\n\r\n  process(resultCallback: (points: ComputedPoint[]) => void): void {\r\n    let x = 0;\r\n\r\n    while (x < this.params.width) {\r\n      let y = 0;\r\n\r\n      while (y < this.params.height) {\r\n        const coord = this.translateToCoord(x, y);\r\n        const iterations = this.fractal.calculate(coord);\r\n        this.computedCoords.push(new ComputedPoint(x, y, iterations));\r\n        y++;\r\n      }\r\n\r\n      resultCallback(this.computedCoords);\r\n      this.computedCoords = [];\r\n\r\n      x++;\r\n    }\r\n  }\r\n\r\n  private translateToCoord(x: number, y: number): Coordinate {\r\n    return new Coordinate(\r\n      this.topLeftCoord.x + (this.params.increment * x),\r\n      this.topLeftCoord.y + (this.params.increment * y),\r\n    );\r\n  }\r\n}\r\n","import { Coordinate } from '../shared/coordinate';\r\nimport { MandelbrotSetParams } from './mandelbrot-set-params';\r\nimport { Fractal } from './shared/fractal.interface';\r\n\r\nexport class MandelbrotSet implements Fractal<MandelbrotSetParams> {\r\n\r\n  constructor(public params: MandelbrotSetParams) { }\r\n\r\n  calculate(initialCoord: Coordinate): number | undefined {\r\n    let coord = initialCoord.clone();\r\n    let count = 0;\r\n\r\n    while (count < this.params.maxIterations) {\r\n      coord = this.iterate(coord, initialCoord);\r\n\r\n      if (!this.checkIsBounded(coord)) {\r\n        return count;\r\n      }\r\n\r\n      count++;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private checkIsBounded(coord: Coordinate): boolean {\r\n    // Find the absolute value\r\n    const value = (coord.x * coord.x) + (coord.y * coord.y);\r\n    return value < (this.params.bound * this.params.bound);\r\n  }\r\n\r\n  private iterate(coord: Coordinate, initialCoord: Coordinate): Coordinate {\r\n    const x = coord.x;\r\n    const y = coord.y;\r\n\r\n    // Square the current term\r\n    coord.x = (x * x) - (y * y);\r\n    coord.y = 2 * x * y;\r\n\r\n    // Add the initial value\r\n    coord.x = coord.x + initialCoord.x;\r\n    coord.y = coord.y + initialCoord.y;\r\n\r\n    return coord;\r\n  }\r\n}\r\n","import { MandelbrotSet } from '../mandelbrot-set';\r\nimport { FractalParams } from './fractal-params.interface';\r\nimport { FractalType } from './fractal-type.enum';\r\n\r\nexport class FractalFactory {\r\n\r\n  static create(params: FractalParams) {\r\n    switch (params.type) {\r\n      case FractalType.MandelbrotSet:\r\n        return new MandelbrotSet(<any>params);\r\n    }\r\n  }\r\n}\r\n","export enum FractalType {\r\n  MandelbrotSet,\r\n}\r\n","import { WorkerMessageType } from './worker-message.enum';\r\nimport { WorkerMessage } from './worker-message.interface';\r\n\r\nexport class ProcessFractalDone implements WorkerMessage {\r\n  type = WorkerMessageType.ProcessFractalDone;\r\n}\r\n","import { WorkerMessageType } from './worker-message.enum';\r\nimport { WorkerMessage } from './worker-message.interface';\r\nimport { ComputedPoint } from '../shared/computed-point';\r\n\r\nexport class ProcessFractalResults implements WorkerMessage {\r\n  type = WorkerMessageType.ProcessFractalResults;\r\n\r\n  constructor(public computedPoints: ComputedPoint[]) { }\r\n}\r\n","export enum WorkerMessageType {\r\n  ProcessFractalInfo,\r\n  ProcessFractalResults,\r\n  ProcessFractalDone,\r\n}\r\n","export class ComputedPoint {\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public value: number,\r\n  ) { }\r\n}\r\n","export class Coordinate {\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n  ) { }\r\n\r\n  clone(): Coordinate {\r\n    return new Coordinate(this.x, this.y);\r\n  }\r\n}\r\n","import { AppWorkers } from './app-workers/app.workers';\r\n\r\nexport const worker = new AppWorkers(self);\r\naddEventListener('message', ($event: MessageEvent) => {\r\n  worker.workerBroker($event);\r\n});\r\n"],"sourceRoot":""}